unit About;

interface

uses WinApi.Windows, System.SysUtils, System.Classes, Vcl.Graphics,
  Vcl.Forms, Vcl.Controls, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls;

type
  TAboutBox = class(TForm)
    Panel1: TPanel;
    ProductName: TLabel;
    Version: TLabel;
    OKButton: TButton;
    Memo1: TMemo;
    ScrollBar1: TScrollBar;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure OKButtonClick(Sender: TObject);
    procedure ScrollBar1Change(Sender: TObject);
    procedure FormMouseWheel(Sender: TObject; Shift: TShiftState;
      WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  AboutBox: TAboutBox;
  value: integer;

implementation

{$R *.dfm}

procedure TAboutBox.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  AboutBox.Constraints.MaxHeight := 242;
  AboutBox.Constraints.MaxWidth := 304;
  AboutBox.Constraints.MinHeight := 242;
  AboutBox.Constraints.MinWidth := 304;
  if Memo1.Visible = True then
    AboutBox.Memo1.Visible := False;
end;

procedure TAboutBox.FormMouseWheel(Sender: TObject; Shift: TShiftState;
  WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);
begin
if WheelDelta>0 then
    ScrollBar1.Position:=ScrollBar1.Position-ScrollBar1.SmallChange
  else
    ScrollBar1.Position:=ScrollBar1.Position+ScrollBar1.SmallChange;
end;

procedure TAboutBox.OKButtonClick(Sender: TObject);
begin
if Memo1.Visible = False then
  AboutBox.Memo1.Visible := True;
end;

procedure TAboutBox.ScrollBar1Change(Sender: TObject);
begin
if ScrollBar1.Position < value then
    memo1.Perform(em_SCROLL, SB_LINEUP,0)
  else
    memo1.Perform(EM_SCROLL, SB_LINEDOWN,0);
  value:=ScrollBar1.Position;
end;

end.
 
